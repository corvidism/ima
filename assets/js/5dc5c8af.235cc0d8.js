"use strict";(self.webpackChunk_ima_docs=self.webpackChunk_ima_docs||[]).push([[2249],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>c});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),s=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=s(a),k=n,c=u["".concat(p,".").concat(k)]||u[k]||m[k]||i;return a?r.createElement(c,l(l({ref:t},d),{},{components:a})):r.createElement(c,l({ref:t},d))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:n,l[1]=o;for(var s=2;s<i;s++)l[s]=a[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}k.displayName="MDXCreateElement"},4012:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var r=a(5773),n=(a(7294),a(3905));const i={id:"ima_core.AbstractRoute",title:"Class: AbstractRoute",sidebar_label:"@ima/core.AbstractRoute",custom_edit_url:null},l=void 0,o={unversionedId:"api/classes/ima_core.AbstractRoute",id:"api/classes/ima_core.AbstractRoute",title:"Class: AbstractRoute",description:"@ima/core.AbstractRoute",source:"@site/../docs/api/classes/ima_core.AbstractRoute.md",sourceDirName:"api/classes",slug:"/api/classes/ima_core.AbstractRoute",permalink:"/api/classes/ima_core.AbstractRoute",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"ima_core.AbstractRoute",title:"Class: AbstractRoute",sidebar_label:"@ima/core.AbstractRoute",custom_edit_url:null},sidebar:"api",previous:{title:"@ima/core.AbstractPageManager",permalink:"/api/classes/ima_core.AbstractPageManager"},next:{title:"@ima/core.AbstractRouter",permalink:"/api/classes/ima_core.AbstractRouter"}},p={},s=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"_cachedController",id:"_cachedcontroller",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"_cachedView",id:"_cachedview",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"_controller",id:"_controller",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"_name",id:"_name",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"_options",id:"_options",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"_pathExpression",id:"_pathexpression",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"_view",id:"_view",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"Methods",id:"methods",level:2},{value:"_getAsyncModule",id:"_getasyncmodule",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"extractParameters",id:"extractparameters",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"getController",id:"getcontroller",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"getName",id:"getname",level:3},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"getOptions",id:"getoptions",level:3},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"getPathExpression",id:"getpathexpression",level:3},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"getView",id:"getview",level:3},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"matches",id:"matches",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-15",level:4},{value:"preload",id:"preload",level:3},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-16",level:4},{value:"toPath",id:"topath",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"decodeURIParameter",id:"decodeuriparameter",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"getQuery",id:"getquery",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"getTrimmedPath",id:"gettrimmedpath",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-20",level:4},{value:"pairsToQuery",id:"pairstoquery",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-21",level:4},{value:"paramsToQuery",id:"paramstoquery",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-22",level:4}],d={toc:s},u="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/api/modules/ima_core"},"@ima/core"),".AbstractRoute"),(0,n.kt)("p",null,"Utility for representing and manipulating a single route in the router's\nconfiguration."),(0,n.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"AbstractRoute"))),(0,n.kt)("p",{parentName:"li"},"\u21b3 ",(0,n.kt)("a",{parentName:"p",href:"/api/classes/ima_core.StaticRoute"},(0,n.kt)("inlineCode",{parentName:"a"},"StaticRoute"))),(0,n.kt)("p",{parentName:"li"},"\u21b3 ",(0,n.kt)("a",{parentName:"p",href:"/api/classes/ima_core.DynamicRoute"},(0,n.kt)("inlineCode",{parentName:"a"},"DynamicRoute"))))),(0,n.kt)("h2",{id:"constructors"},"Constructors"),(0,n.kt)("h3",{id:"constructor"},"constructor"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("strong",{parentName:"p"},"new AbstractRoute"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"name"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"pathExpression"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"controller"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"view"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"options"),")"),(0,n.kt)("p",null,"Initializes the route."),(0,n.kt)("h4",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"name")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The unique name of this route, identifying it among the rest of the routes in the application.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"pathExpression")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,n.kt)("inlineCode",{parentName:"td"},"RoutePathExpression")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Path expression used in route matching, to generate valid path with provided params and parsing params from current path.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"controller")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"string")," ","|"," typeof ",(0,n.kt)("a",{parentName:"td",href:"/api/classes/ima_core.Controller"},(0,n.kt)("inlineCode",{parentName:"a"},"Controller"))," ","|"," () => ",(0,n.kt)("a",{parentName:"td",href:"/api/interfaces/ima_core.IController"},(0,n.kt)("inlineCode",{parentName:"a"},"IController"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"The full name of Object Container alias identifying the controller associated with this route.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"view")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"unknown")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The full name or Object Container alias identifying the view class associated with this route.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/api/modules/ima_core#routeoptions"},(0,n.kt)("inlineCode",{parentName:"a"},"RouteOptions"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"The route additional options.")))),(0,n.kt)("h4",{id:"defined-in"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L201"},"packages/core/src/router/AbstractRoute.ts:201")),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("h3",{id:"_cachedcontroller"},"_","cachedController"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,n.kt)("strong",{parentName:"p"},"_","cachedController"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"unknown")),(0,n.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L53"},"packages/core/src/router/AbstractRoute.ts:53")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"_cachedview"},"_","cachedView"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,n.kt)("strong",{parentName:"p"},"_","cachedView"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"unknown")),(0,n.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L54"},"packages/core/src/router/AbstractRoute.ts:54")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"_controller"},"_","controller"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,n.kt)("strong",{parentName:"p"},"_","controller"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"string")," ","|"," typeof ",(0,n.kt)("a",{parentName:"p",href:"/api/classes/ima_core.Controller"},(0,n.kt)("inlineCode",{parentName:"a"},"Controller"))," ","|"," () => ",(0,n.kt)("a",{parentName:"p",href:"/api/interfaces/ima_core.IController"},(0,n.kt)("inlineCode",{parentName:"a"},"IController"))),(0,n.kt)("p",null,"The full name of Object Container alias identifying the controller\nassociated with this route."),(0,n.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L43"},"packages/core/src/router/AbstractRoute.ts:43")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"_name"},"_","name"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,n.kt)("strong",{parentName:"p"},"_","name"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("p",null,"The unique name of this route, identifying it among the rest of the\nroutes in the application."),(0,n.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L33"},"packages/core/src/router/AbstractRoute.ts:33")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"_options"},"_","options"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,n.kt)("strong",{parentName:"p"},"_","options"),": ",(0,n.kt)("a",{parentName:"p",href:"/api/modules/ima_core#routeoptions"},(0,n.kt)("inlineCode",{parentName:"a"},"RouteOptions"))),(0,n.kt)("p",null,"The route additional options."),(0,n.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L52"},"packages/core/src/router/AbstractRoute.ts:52")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"_pathexpression"},"_","pathExpression"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,n.kt)("strong",{parentName:"p"},"_","pathExpression"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,n.kt)("inlineCode",{parentName:"p"},"RoutePathExpression")),(0,n.kt)("p",null,"Path expression used in route matching, to generate valid path with\nprovided params and parsing params from current path."),(0,n.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L38"},"packages/core/src/router/AbstractRoute.ts:38")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"_view"},"_","view"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,n.kt)("strong",{parentName:"p"},"_","view"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"unknown")),(0,n.kt)("p",null,"The full name or Object Container alias identifying the view class\nassociated with this route."),(0,n.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L48"},"packages/core/src/router/AbstractRoute.ts:48")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"_getasyncmodule"},"_","getAsyncModule"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"_getAsyncModule"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"module"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"unknown")),(0,n.kt)("p",null,"Helper method to pre-process view and controller which can be\nasync functions in order to support dynamic async routing."),(0,n.kt)("h4",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"module")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"unknown")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The module class/alias/constant.")))),(0,n.kt)("h4",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"unknown")),(0,n.kt)("p",null,"Module, or promise resolving to the actual view or controller\nconstructor function/class."),(0,n.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L362"},"packages/core/src/router/AbstractRoute.ts:362")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"extractparameters"},"extractParameters"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"extractParameters"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"path?"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"RouteParams")),(0,n.kt)("p",null,"Extracts the parameter values from the provided path. The method\nextracts both the in-path parameters and parses the query, allowing the\nquery parameters to override the in-path parameters."),(0,n.kt)("p",null,"The method returns an empty hash object if the path does not match this\nroute."),(0,n.kt)("h4",{id:"parameters-2"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"path?")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"string"))))),(0,n.kt)("h4",{id:"returns-1"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"RouteParams")),(0,n.kt)("p",null,"Map of parameter names to parameter\nvalues."),(0,n.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L347"},"packages/core/src/router/AbstractRoute.ts:347")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"getcontroller"},"getController"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"getController"),"(): ",(0,n.kt)("inlineCode",{parentName:"p"},"unknown")),(0,n.kt)("p",null,"Returns Controller class/alias/constant associated with this route.\nInternally caches async calls for dynamically imported controllers,\nmeaning that once they're loaded, you get the same promise for\nsubsequent calls."),(0,n.kt)("h4",{id:"returns-2"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"unknown")),(0,n.kt)("p",null,"The Controller class/alias/constant."),(0,n.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L251"},"packages/core/src/router/AbstractRoute.ts:251")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"getname"},"getName"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"getName"),"(): ",(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("p",null,"Returns the unique identifying name of this route."),(0,n.kt)("h4",{id:"returns-3"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("p",null,"The name of the route, identifying it."),(0,n.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L239"},"packages/core/src/router/AbstractRoute.ts:239")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"getoptions"},"getOptions"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"getOptions"),"(): ",(0,n.kt)("a",{parentName:"p",href:"/api/modules/ima_core#routeoptions"},(0,n.kt)("inlineCode",{parentName:"a"},"RouteOptions"))),(0,n.kt)("p",null,"Return route additional options."),(0,n.kt)("h4",{id:"returns-4"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/api/modules/ima_core#routeoptions"},(0,n.kt)("inlineCode",{parentName:"a"},"RouteOptions"))),(0,n.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L278"},"packages/core/src/router/AbstractRoute.ts:278")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"getpathexpression"},"getPathExpression"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"getPathExpression"),"(): ",(0,n.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,n.kt)("inlineCode",{parentName:"p"},"RoutePathExpression")),(0,n.kt)("p",null,"Path expression used in route matching, to generate valid path with\nprovided params and parsing params from current path."),(0,n.kt)("h4",{id:"returns-5"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,n.kt)("inlineCode",{parentName:"p"},"RoutePathExpression")),(0,n.kt)("p",null,"The path expression."),(0,n.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L288"},"packages/core/src/router/AbstractRoute.ts:288")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"getview"},"getView"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"getView"),"(): ",(0,n.kt)("inlineCode",{parentName:"p"},"unknown")),(0,n.kt)("p",null,"Returns View class/alias/constant associated with this route.\nInternally caches async calls for dynamically imported views,\nmeaning that once they're loaded, you get the same promise for\nsubsequent calls."),(0,n.kt)("h4",{id:"returns-6"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"unknown")),(0,n.kt)("p",null,"The View class/alias/constant."),(0,n.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L267"},"packages/core/src/router/AbstractRoute.ts:267")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"matches"},"matches"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"matches"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"path"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"boolean")),(0,n.kt)("p",null,"Tests whether the provided URL path matches this route. The provided\npath may contain the query."),(0,n.kt)("h4",{id:"parameters-3"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"path")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The URL path.")))),(0,n.kt)("h4",{id:"returns-7"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"true")," if the provided path matches this route."),(0,n.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L328"},"packages/core/src/router/AbstractRoute.ts:328")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"preload"},"preload"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"preload"),"(): ",(0,n.kt)("inlineCode",{parentName:"p"},"Promise"),"<","[",(0,n.kt)("inlineCode",{parentName:"p"},"unknown"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"unknown"),"]",">"),(0,n.kt)("p",null,"Preloads dynamically imported view and controller."),(0,n.kt)("h4",{id:"returns-8"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Promise"),"<","[",(0,n.kt)("inlineCode",{parentName:"p"},"unknown"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"unknown"),"]",">"),(0,n.kt)("p",null,"Promise.All resolving to ","[view, controller]"," tuple."),(0,n.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L297"},"packages/core/src/router/AbstractRoute.ts:297")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"topath"},"toPath"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"toPath"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"params"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("p",null,"Creates the URL and query parts of a URL by substituting the route's\nparameter placeholders by the provided parameter value."),(0,n.kt)("p",null,"The extraneous parameters that do not match any of the route's\nplaceholders will be appended as the query string."),(0,n.kt)("h4",{id:"parameters-4"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"params")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"RouteParams")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The route parameter values.")))),(0,n.kt)("h4",{id:"returns-9"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("p",null,"Path and, if necessary, query parts of the URL\nrepresenting this route with its parameters replaced by the\nprovided parameter values."),(0,n.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L314"},"packages/core/src/router/AbstractRoute.ts:314")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"decodeuriparameter"},"decodeURIParameter"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,n.kt)("strong",{parentName:"p"},"decodeURIParameter"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"parameterValue"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("p",null,"TODO IMA@18 remove static method"),(0,n.kt)("p",null,"Decoding parameters."),(0,n.kt)("h4",{id:"parameters-5"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"parameterValue")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"string"))))),(0,n.kt)("h4",{id:"returns-10"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("p",null,"decodedValue"),(0,n.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L168"},"packages/core/src/router/AbstractRoute.ts:168")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"getquery"},"getQuery"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,n.kt)("strong",{parentName:"p"},"getQuery"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"path"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"RouteParams")),(0,n.kt)("p",null,"TODO IMA@18 remove static method"),(0,n.kt)("p",null,"Extracts and decodes the query parameters from the provided URL path and\nquery."),(0,n.kt)("h4",{id:"parameters-6"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"path")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The URL path, including the optional query string (if any).")))),(0,n.kt)("h4",{id:"returns-11"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"RouteParams")),(0,n.kt)("p",null,"Parsed query parameters."),(0,n.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L123"},"packages/core/src/router/AbstractRoute.ts:123")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"gettrimmedpath"},"getTrimmedPath"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,n.kt)("strong",{parentName:"p"},"getTrimmedPath"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"path"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("p",null,"TODO IMA@18 remove static method"),(0,n.kt)("p",null,"Trims the trailing forward slash from the provided URL path."),(0,n.kt)("h4",{id:"parameters-7"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"path")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The path to trim.")))),(0,n.kt)("h4",{id:"returns-12"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("p",null,"Trimmed path."),(0,n.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L184"},"packages/core/src/router/AbstractRoute.ts:184")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"pairstoquery"},"pairsToQuery"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,n.kt)("strong",{parentName:"p"},"pairsToQuery"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"pairs?"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("p",null,"TODO IMA@18 remove static method"),(0,n.kt)("p",null,"Converts array of pairs (tuples) into valid URI query component.\nFilters out invalid inputs (undefined, null, object, array, non-pair)."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"let pairs = [['a', true], ['hello world', 123]];\npairsToQuery(pairs); // => \"?a=true&hello%20world=123\"\n")),(0,n.kt)("h4",{id:"parameters-8"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"pairs?")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"unknown"),"[][]"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"[]")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Array of arrays where the first element must be string","|","number and the second element can be any.")))),(0,n.kt)("h4",{id:"returns-13"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("p",null,"Valid URI query component or empty string if\nthere are no valid pairs provided."),(0,n.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L71"},"packages/core/src/router/AbstractRoute.ts:71")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"paramstoquery"},"paramsToQuery"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,n.kt)("strong",{parentName:"p"},"paramsToQuery"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"params?"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("p",null,"TODO IMA@18 remove static method"),(0,n.kt)("p",null,"Converts object of key/value pairs to URI query,\nwhich can be appended to url."),(0,n.kt)("h4",{id:"parameters-9"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"params")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"RouteParams"))))),(0,n.kt)("h4",{id:"returns-14"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/corvidism/ima/blob/f2ed725/packages/core/src/router/AbstractRoute.ts#L99"},"packages/core/src/router/AbstractRoute.ts:99")))}m.isMDXComponent=!0}}]);